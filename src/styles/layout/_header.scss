@use "../abstracts";

@mixin header__nav-item {
  position: relative;
  max-width: 300px;
  font-size: abstracts.$font-size-menu;
  color: abstracts.$color-menu;
  text-align: center;
}

@mixin el-active {
  position: fixed;
  visibility: visible;
  opacity: 1;
  z-index: 1;

  @include abstracts.transition-simple;
}

@mixin el-hidden {
  position: absolute;
  visibility: hidden;
  opacity: 0;
}

.header__wrapper {
  min-height: 72px;
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 20px;
}

.header__logo {
  @media (max-width: abstracts.$bp-small-tablet) {
    width: 172px;
    height: auto;
  }

  @media (max-width: abstracts.$bp-large-mobile) {
    width: 113px;
  }
}

.header__nav {
  @media (max-width: abstracts.$bp-large) {
    @include el-hidden;
  }
}

.header__nav--active {
  @include el-active;
  inset: 72px 0 calc(100% - 100px);
  width: 100%;
  padding-right: 0;
  height: calc(100dvh - 72px);
  background: abstracts.$color-main-bg;

  & .header__nav-list {
    flex-direction: column;
    align-items: center;
    justify-content: flex-start;
  }
}

.header__nav-list {
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
  row-gap: 15px;
  padding: 23px 30px 0 0;
  height: calc(100dvh - 35%);
}

.header__nav-item {
  @include header__nav-item;
  padding: 0 12px 23px;

  &::before {
    opacity: 0;
    position: absolute;
    content: "";
    background-color: abstracts.$color-primary;
    width: 0;
    height: 4px;
    left: 12px;
    bottom: 0;

    @include abstracts.transition-ease-in-out(all);
  }

  @media (hover: hover) and (pointer: fine) {
    &:hover::before,
    &:focus::before {
      width: calc(100% - 12px * 2);
      opacity: 1;
    }
  }
}

.header__nav-item--active {
  pointer-events: none;

  &::before {
    width: calc(100% - 12px * 2);
    opacity: 1;
  }
}

.header__buttons-wrapper {
  display: flex;
  align-items: center;
  gap: 54px;

  @media (max-width: abstracts.$bp-large) {
    @include el-hidden;
  }
}

.header__buttons-wrapper--active {
  @include el-active;
  bottom: 0;
  width: 100%;
  padding: 20px 0 40px;
  justify-content: center;
  align-items: center;
}

.header__phone {
  white-space: nowrap;

  @include header__nav-item;
  @include abstracts.animation-fade;
}

.header__burger {
  display: none;
  width: 30px;
  height: 24px;
  position: relative;

  &::before {
    position: absolute;
    content: "";
    background-image: url('data:image/svg+xml,<svg width="30" height="24" viewBox="0 0 30 24" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="30" height="24" fill="%23FFFFFF"/><rect width="26" height="4" transform="matrix(-1 0 0 1 28 2)" fill="%23354F71"/><rect width="26" height="4" transform="matrix(-1 0 0 1 28 10)" fill="%23354F71"/><rect width="26" height="4" transform="matrix(-1 0 0 1 28 18)" fill="%23354F71"/></svg>');
    width: 30px;
    height: 24px;
    top: calc(50% - 24px / 2);
    left: calc(50% - 30px / 2);
    transition: top 0.3s 0.15s, bottom 0.3s 0.15s;

    @media (max-width: abstracts.$bp-small-mobile) {
      background-image: url('data:image/svg+xml,<svg width="30" height="24" viewBox="0 0 30 24" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="30" height="24" fill="%23FFFFFF"/><rect width="26" height="4" transform="matrix(-1 0 0 1 28 2)" fill="%234F56D3"/><rect width="26" height="4" transform="matrix(-1 0 0 1 28 10)" fill="%234F56D3"/><rect width="26" height="4" transform="matrix(-1 0 0 1 28 18)" fill="%234F56D3"/></svg>');
    }
  }

  @media (max-width: abstracts.$bp-large) {
    display: block;
  }
}

.header__cross {
  width: 30px;
  height: 24px;
  position: relative;
  transition: transform 0.2s ease-in, top 0.2s ease-in, color 0.2s ease-in;

  &::before,
  &::after {
    display: inline-block;
    position: absolute;
    content: "";
    background-color: abstracts.$color-btn-burger;
    width: 30px;
    height: 4px;
    top: calc(50% - 4px / 2);
    right: calc(50% - 30px / 2);
    transition: transform 0.3s 0.15s;

    @media (max-width: abstracts.$bp-small-mobile) {
      background-color: abstracts.$color-primary;
    }
  }

  &::before {
    transform: rotate(45deg);
  }

  &::after {
    transform: rotate(-45deg);
  }
}
